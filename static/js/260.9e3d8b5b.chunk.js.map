{"version":3,"file":"static/js/260.9e3d8b5b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/modules/Contacts/ContactForm/ContactForm.module.css?633b","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Contacts/selectors.js","components/modules/Contacts/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/modules/Contacts/Filter/Filter.module.css?cd87","components/modules/Contacts/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/modules/Contacts/ContactList/ContactList.module.css?6af9","webpack://goit-react-hw-08-phonebook/./src/components/modules/Contacts/ContactsRemove/contactsRemove.module.css?a8ca","components/modules/Contacts/ContactsRemove/ContactsRemove.jsx","components/modules/Contacts/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__mw8dt\",\"input\":\"ContactForm_input__gbdQr\",\"button\":\"ContactForm_button__Pr1n3\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","\nimport { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getStatusFilter = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        if (!filter) return contacts;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    )\n  }    \n)","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../../../redux/Contacts/operations';\nimport s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport {\n  selectIsLoading,\n  selectContacts,\n} from '../../../../redux/Contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isNaN(Number(number))) {\n      alert('The number must be a number!');\n      return;\n    }\n    const existingContact = contacts.find(contact => contact.name === name);\n    if (existingContact) {\n      alert(\n        `Contact with name ${name} already exists. Please enter a new name.`\n      );\n      return;\n    }\n    const contact = { name, number };\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\" disabled={loading}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__W59Cz\"};","import { addFilter } from 'redux/Contacts/filterSlice';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const name = e.target.value;\n    dispatch(addFilter(name));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        onChange={handleChange}\n        name=\"name\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"listContact\":\"ContactList_listContact__6DXGI\",\"listItem\":\"ContactList_listItem__xjFpY\",\"listButton\":\"ContactList_listButton__q+ixb\"};","// extracted by mini-css-extract-plugin\nexport default {\"listButton\":\"contactsRemove_listButton__Xm1DH\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/Contacts/operations';\nimport s from './contactsRemove.module.css';\n\nexport const ContactsRemove = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const hendleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <h3>\n        {name}: {number}\n      </h3>\n      <button className={s.listButton} type=\"button\" onClick={hendleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactsRemove.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  deleteContact: PropTypes.func,\n};\n","import s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactsRemove } from 'components/modules/Contacts/ContactsRemove/ContactsRemove';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useEffect } from 'react';\nimport { fetchContact } from '../../../../redux/Contacts/operations';\nimport { getStatusFilter } from '../../../../redux/Contacts/selectors';\n\nconst ContactList = () => {\n  const filterContact = useSelector(getStatusFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.listContact}>\n      {filterContact.map(({ name, number, id }) => (\n        <li className={s.listItem} key={id}>\n          <ContactsRemove name={name} number={number} id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from '../../components/modules/Contacts/ContactForm/ContactForm';\nimport Filter from '../../components/modules/Contacts/Filter/Filter';\nimport ContactsList from '../../components/modules/Contacts/ContactList/ContactList';\nimport { selectIsLoading, selectError } from '../../redux/Contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nconst ContactPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <main>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <Filter />\n        {isLoading && !error && `...Loading`}\n        <ContactsList />\n      </div>\n    </main>\n  );\n};\n\nexport default ContactPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","getStatusFilter","filter","contact","toLowerCase","includes","dispatch","useDispatch","loading","useSelector","useState","setName","number","setNumber","handleInputChange","e","currentTarget","className","s","onSubmit","preventDefault","isNaN","Number","alert","existingContact","addContact","type","onChange","disabled","target","addFilter","ContactsRemove","id","onClick","deleteContact","filterContact","useEffect","fetchContact"],"sourceRoot":""}